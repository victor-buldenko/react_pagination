{"version":3,"sources":["components/Pagination/Pagination.tsx","components/ContentList/ContentList.tsx","App.tsx","utils.ts","index.tsx"],"names":["paginationItemsLi","number","activeLi","handler","paginationLI","i","active","push","className","href","onClick","Pagination","total","perPage","currentPage","stepForward","stepBack","click","useState","paginationCount","setPaginationCount","disableStepBack","setDisableStepBack","disableStepForward","setDisableStepForward","useEffect","Math","ceil","classNames","disabled","ContentList","startCounting","arrayLI","finalLINumber","setContentItems","items","from","to","numbers","n","getNumbers","map","App","length","setPerPage","setCurrentPage","id","value","onChange","e","target","htmlFor","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0a71a89.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\n\ntype Props = {\n  total:number;\n  perPage:number;\n  currentPage:number;\n  stepForward: () => void;\n  stepBack: () => void;\n  click: (num: number) => void;\n};\n\nconst paginationItemsLi = (\n  number: number,\n  activeLi: number,\n  handler: Props['click'],\n) => {\n  const paginationLI = [];\n\n  for (let i = 1; i <= number; i += 1) {\n    const active = (i === activeLi) ? 'active' : '';\n\n    paginationLI.push((\n      <li\n        className={`page-item ${active}`}\n        key={`page-item-${i}`}\n      >\n        <a\n          data-cy=\"pageLink\"\n          className=\"page-link\"\n          href={`#${i}`}\n          onClick={() => handler(i)}\n        >\n          {`${i}`}\n        </a>\n      </li>\n    ));\n  }\n\n  return paginationLI;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  stepForward,\n  stepBack,\n  click,\n}) => {\n  const [paginationCount, setPaginationCount] = useState(0);\n  const [disableStepBack, setDisableStepBack] = useState(false);\n  const [disableStepForward, setDisableStepForward] = useState(false);\n\n  useEffect(() => {\n    setPaginationCount(Math.ceil(total / perPage));\n    setDisableStepForward(currentPage === paginationCount);\n    setDisableStepBack(currentPage === 1);\n  }, [perPage, currentPage]);\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', { disabled: disableStepBack })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled=\"true\"\n          onClick={() => stepBack()}\n        >\n          «\n        </a>\n      </li>\n\n      {paginationItemsLi(paginationCount, currentPage, click)}\n\n      <li\n        className={classNames('page-item', { disabled: disableStepForward })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled=\"false\"\n          onClick={() => stepForward()}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","type Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n};\n\nexport const ContentList: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n}) => {\n  const startCounting = (currentPage - 1) * perPage;\n  const setContentItems = () => {\n    const arrayLI = [];\n    let finalLINumber = perPage;\n\n    if (startCounting + perPage > total) {\n      finalLINumber = total - startCounting;\n    }\n\n    for (let i = 1; i <= finalLINumber; i += 1) {\n      arrayLI.push(\n        <li data-cy=\"item\" key={`Item ${i}`}>\n          {`Item ${startCounting + i}`}\n        </li>,\n      );\n    }\n\n    return arrayLI;\n  };\n\n  return (\n    <ul>\n      {setContentItems()}\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\nimport { ContentList } from './components/ContentList/ContentList';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [total] = useState(+items.length);\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const paginationStepForward = () => {\n    setCurrentPage(prev => prev + 1);\n  };\n\n  const paginationStepBack = () => {\n    setCurrentPage(prev => prev - 1);\n  };\n\n  useEffect(() => {\n    if (Math.ceil(total / perPage) < currentPage) {\n      setCurrentPage(Math.ceil(total / perPage));\n    }\n  }, [perPage]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${perPage * (currentPage - 1) + 1} -\n          ${perPage * currentPage > total ? total : perPage * currentPage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={e => setPerPage(+e.target.value)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n\n      <Pagination\n        total={+total}\n        perPage={perPage}\n        currentPage={currentPage}\n        stepForward={paginationStepForward}\n        stepBack={paginationStepBack}\n        click={setCurrentPage}\n      />\n\n      <ContentList\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}